###################################################################
##
## Name     : plb_osif_mmu
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plb_osif_mmu

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION STYLE = MIX
OPTION IP_GROUP = PPC:USER
OPTION CORE_STATE = DEVELOPMENT


## Bus Interfaces
BUS_INTERFACE BUS = SDCR, BUS_STD = DCR, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MSPLB, BUS_TYPE = MASTER_SLAVE, BUS_STD = PLB
BUS_INTERFACE BUS = OSIF, BUS_TYPE = INITIATOR, BUS_STD = OSIF_STD
BUS_INTERFACE BUS = TLB, BUS_TYPE = INITIATOR, BUS_STD = TLB_STD
BUS_INTERFACE BUS = FIFO_READ, BUS_TYPE = INITIATOR, BUS_STD = FIFO_READ_STD
BUS_INTERFACE BUS = FIFO_WRITE, BUS_TYPE = INITIATOR, BUS_STD = FIFO_WRITE_STD


## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x200, BUS = MSPLB, ADDRESS = BASE, PAIR = C_HIGHADDR
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = MSPLB, ADDRESS = HIGH, PAIR = C_BASEADDR
PARAMETER C_PLB_AWIDTH = 32, DT = INTEGER, BUS = MSPLB
PARAMETER C_PLB_DWIDTH = 64, DT = INTEGER, BUS = MSPLB
PARAMETER C_PLB_NUM_MASTERS = 8, DT = INTEGER, BUS = MSPLB
PARAMETER C_PLB_MID_WIDTH = 3, DT = INTEGER, BUS = MSPLB
PARAMETER C_FAMILY = virtex2p, DT = STRING
PARAMETER C_BURST_AWIDTH = 14, DT = INTEGER
PARAMETER C_FIFO_DWIDTH = 32, DT = INTEGER, BUS = FIFO_WRITE
PARAMETER C_DCR_BASEADDR = 0b1111111111, DT = std_logic_vector, BUS = SDCR, MIN_SIZE = 0
PARAMETER C_DCR_HIGHADDR = 0b0000000000, DT = std_logic_vector, BUS = SDCR
PARAMETER C_DCR_AWIDTH = 10, DT = integer, BUS = SDCR
PARAMETER C_DCR_DWIDTH = 32, DT = integer, BUS = SDCR
PARAMETER C_DCR_ILA = 0, DT = INTEGER, RANGE = (0:1), DESC = Include ChipScope ILA core for DCR debugging, VALUES = (0=FALSE , 1=TRUE)


## Ports

# PLB bus interface
PORT PLB_Clk = "", DIR = I, SIGIS = Clk, BUS = MSPLB
PORT PLB_Rst = PLB_Rst, DIR = I, SIGIS = Rst, BUS = MSPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = MSPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_PLB_NUM_MASTERS-1)], BUS = MSPLB
PORT Sl_MErr = Sl_MErr, DIR = O, VEC = [0:(C_PLB_NUM_MASTERS-1)], BUS = MSPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = MSPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = MSPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = MSPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_PLB_DWIDTH-1)], BUS = MSPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = MSPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = MSPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = MSPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = MSPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = MSPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = MSPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = MSPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = MSPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_PLB_AWIDTH-1)], BUS = MSPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_PLB_DWIDTH/8)-1)], BUS = MSPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = MSPLB
PORT PLB_compress = PLB_compress, DIR = I, BUS = MSPLB
PORT PLB_guarded = PLB_guarded, DIR = I, BUS = MSPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = MSPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_PLB_MID_WIDTH-1)], BUS = MSPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = MSPLB
PORT PLB_ordered = PLB_ordered, DIR = I, BUS = MSPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = MSPLB
PORT PLB_pendPri = PLB_pendPri, DIR = I, VEC = [0:1], BUS = MSPLB
PORT PLB_pendReq = PLB_pendReq, DIR = I, BUS = MSPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = MSPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = MSPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = MSPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = MSPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = MSPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = MSPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = MSPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = MSPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_PLB_DWIDTH-1)], BUS = MSPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = MSPLB
PORT M_abort = M_abort, DIR = O, BUS = MSPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_PLB_AWIDTH-1)], BUS = MSPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_PLB_DWIDTH/8)-1)], BUS = MSPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MSPLB
PORT M_compress = M_compress, DIR = O, BUS = MSPLB
PORT M_guarded = M_guarded, DIR = O, BUS = MSPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MSPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MSPLB
PORT M_ordered = M_ordered, DIR = O, BUS = MSPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MSPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MSPLB
PORT M_request = M_request, DIR = O, BUS = MSPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MSPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MSPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MSPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MSPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_PLB_DWIDTH-1)], BUS = MSPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MSPLB
PORT PLB_MErr = PLB_MErr, DIR = I, BUS = MSPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MSPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MSPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MSPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MSPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MSPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_PLB_DWIDTH-1)], BUS = MSPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MSPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MSPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MSPLB

# core clock and reset (should be the same as all bus clocks)
PORT sys_clk = "", DIR = I, SIGIS = CLK
PORT sys_reset = "", DIR = I

# DCR bus interface
PORT o_dcrAck = Sl_dcrAck, DIR = O, BUS = SDCR
PORT o_dcrDBus = Sl_dcrDBus, DIR = O, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR
PORT i_dcrABus = DCR_ABus, DIR = I, VEC = [0:C_DCR_AWIDTH-1], BUS = SDCR
PORT i_dcrDBus = DCR_Sl_DBus, DIR = I, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR
PORT i_dcrRead = DCR_Read, DIR = I, BUS = SDCR
PORT i_dcrWrite = DCR_Write, DIR = I, BUS = SDCR

# Interrupt to CPU
PORT interrupt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH

# Debugging I/F
PORT busy = "", DIR = O
PORT blocking = "", DIR = O
PORT i_dcrICON = "", DIR = I, VEC = [35:0]


# Task interface
PORT task_clk = "clk", DIR = O, SIGIS = Clk, BUS = OSIF
PORT task_reset = "reset", DIR = O, SIGIS = Rst, BUS = OSIF
PORT osif_os2task_vec = "osif_os2task_vec", DIR = O, VEC = [0:46], BUS = OSIF
PORT osif_task2os_vec = "osif_task2os_vec", DIR = I, VEC = [0:50], BUS = OSIF

# TLB interface
PORT i_tlb_rdata = "tlb_rdata", DIR = I, VEC = [0:20], BUS = TLB
PORT o_tlb_wdata = "tlb_wdata", DIR = O, VEC = [0:20], BUS = TLB
PORT o_tlb_tag = "tlb_tag", DIR = O, VEC = [0:19], BUS = TLB
PORT i_tlb_match = "tlb_match", DIR = I, BUS = TLB
PORT o_tlb_we = "tlb_we", DIR = O, BUS = TLB
PORT i_tlb_busy = "tlb_busy", DIR = I, BUS = TLB
PORT o_tlb_request = "tlb_request", DIR = O, BUS = TLB

# Burst RAM interface
PORT burstAddr = "burstAddr", DIR = O, VEC = [0:C_BURST_AWIDTH-1], BUS = OSIF
PORT burstWrData = "burstWrData", DIR = O, VEC = [0:C_PLB_DWIDTH-1], BUS = OSIF
PORT burstRdData = "burstRdData", DIR = I, VEC = [0:C_PLB_DWIDTH-1], BUS = OSIF
PORT burstWE = "burstWE", DIR = O, BUS = OSIF
PORT burstBE = "burstBE", DIR = O, VEC = [0:C_PLB_DWIDTH/8-1], BUS = OSIF

# Left (read) FIFO interface
PORT o_fifo_read_en = "read", DIR = O, BUS = FIFO_READ
PORT i_fifo_read_data = "dataOut", DIR = I, VEC = [0:C_FIFO_DWIDTH-1], BUS = FIFO_READ
PORT i_fifo_read_ready = "clearToRead", DIR = I, BUS = FIFO_READ
# Right (write) FIFO interface
PORT o_fifo_clk = "clk", DIR = O, BUS = FIFO_WRITE
PORT o_fifo_reset = "rst", DIR = O, BUS = FIFO_WRITE
PORT o_fifo_write_en = "write", DIR = O, BUS = FIFO_WRITE
PORT o_fifo_write_data = "dataIn", DIR = O, VEC = [0:C_FIFO_DWIDTH-1], BUS = FIFO_WRITE
PORT i_fifo_write_ready = "clearToWrite", DIR = I, BUS = FIFO_WRITE

# bus macro control
PORT bmEnable = "", DIR = O

END
