//Format
//                   Test Vec 4------------\
//                   Test Vec 3------------\
//                   Test Vec 2------------\  //Destination Ready
//                   Test Vec 1------------\  //Reset
//                                         |
//                   (Repeat Count)---\    |
//                                    |    |
//               RESET-----------\    |    |
//               (n.a.)----------\    |    |
//               POWER_DOWN------\    |    |
//               (n.a.)----------\    |    |
//                               |    |    |
//               TX_REM[2:0]--\  |    |    |
//               TX_EOF_N-----\  |    |    |
//                            |  |    |    |
//           TX_SRC_RDY_N--\  |  |    |    |
//           TX_SOF_N------\  |  |    |    |
//           UFC_REQ_N-----\  |  |    |    |
//           NFC_REQ_N-----\  |  |    |    |
//                         |  |  |    |    |
//   UFC_TX_MS[0:3]-----\  |  |  |    |    |
//      NFC_NB[0:3]--\  |  |  |  |    |    |
//                   |  |  |  |  |    |    |
//   TX_D[63:0]      |  |  |  |  |    |    |
A5A5_A5A5_A5A5_A5A5__0__0__F__8__0___0000__80	//Wait for reset released
A5A5_A5A5_A5A5_A5A5__0__0__F__8__0___0008__40   //Wait for destination ready

//Send a series of frames with incrementing size

AA11_1111_1111_1111__0__0__C__0__0____0000__40  // 1 byte
BBAA_2222_2222_2222__0__0__C__1__0____0000__40  // 2 bytes
CCBB_AA33_3333_3333__0__0__C__2__0____0000__40  // 3 bytes
DDCC_BBAA_4444_4444__0__0__C__3__0____0000__40  // 4 bytes
EEDD_CCBB_AA55_5555__0__0__C__4__0____0000__40  // 5 bytes
FFEE_DDCC_BBAA_6666__0__0__C__5__0____0000__40  // 6 bytes
00FF_EEDD_CCBB_AA77__0__0__C__6__0____0000__40  // 7 bytes
1100_FFEE_DDCC_BBAA__0__0__C__7__0____0000__40  // 8 bytes

F1F1_F1F1_F1F1_F1F1__0__0__C__8__0____0000__40  // 9 bytes
E100_0000_0000_0000__0__0__E__0__0____0000__40

F1F1_F1F1_F1F1_F1F1__0__0__C__8__0____0000__40  // 10 bytes
E1E1_0000_0000_0000__0__0__E__1__0____0000__40

F1F1_F1F1_F1F1_F1F1__0__0__C__8__0____0000__40  // 11 bytes
E1E1_E100_0000_0000__0__0__E__2__0____0000__40

FFFF_FFFF_FFFF_FFFF__0__0__F__0__0____0001__00  // a short gap

F2F2_F2F2_F2F2_F2F2__0__0__C__8__0____0000__40  // 12 bytes
E2E2_E2E2_BEEF_BEEF__0__0__E__3__0____0000__40

F2F2_F2F2_F2F2_F2F2__0__0__C__8__0____0000__40  // 13 bytes (Partial data involved)
E2E2_E2E2_E2AD_BEEF__0__0__E__4__0____0000__40

F313_F323_F333_F343__0__0__C__8__0____0000__40  // 14 bytes
E3D3_D3C3_B3A3_BEEF__0__0__E__5__0____0000__40

F313_F323_F333_F343__0__0__C__8__0____0000__40  // 15 bytes
E3D3_D3C3_B3A3_EE00__0__0__E__6__0____0000__40

F313_F323_F333_F343__0__0__C__8__0____0000__40  // 16 bytes
E3D3_D3C3_B3A3_EEFF__0__0__E__7__0____0000__40

FFFF_FFFF_FFFF_FFFF__0__0__F__0__0____0001__00  // a short gap

1234_5678_90AB_CDEF__0__0__C__8__0____0000__40  // 17 bytes with a pause
BEEF_BEEF_BEEF_BEEF__0__0__F__8__0____0000__40  // a pause
AAAA_BBBB_CCCC_DDDD__0__0__E__8__0____0000__40  
EE00_0000_0000_0000__0__0__E__0__0____0000__40

FACE_1111_1111_1111__0__0__C__8__0____0000__40  // 72 bytes
DEAF_1111_1111_1111__0__0__E__8__0____0000__40
CAFE_1111_1111_1234__0__0__E__8__0____0000__40
FACE_2222_2222_2222__0__0__E__8__0____0000__40
BEEF_2222_2222_2222__0__0__E__8__0____0000__40
CAFE_1234_1234_1234__0__0__E__8__0____0000__40
FACE_1111_1111_1234__0__0__E__8__0____0000__40
DEAF_1234_4321_1234__0__0__E__8__0____0000__40
CAFE_1234_4321_1234__0__0__E__7__0____0000__40

FACE_DEAF_CAFE_1234__0__0__C__8__0____0000__40  // a long PDU
FACE_DEAF_CAFE_5678__0__0__E__8__0____0100__40
FACE_DEAF_CAFE_5678__0__0__E__7__0____0000__40

FFFF_FFFF_FFFF_FFFF__0__0__F__0__0____0001__00  // a short gap

AA11_1111_1111_1111__0__0__C__0__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__1__0____0000__40
BBAA_2222_2222_2222__0__0__C__1__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__2__0____0000__40
CCBB_AA33_3333_3333__0__0__C__2__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__3__0____0000__40
DDCC_BBAA_4444_4444__0__0__C__3__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__4__0____0000__40
EEDD_CCBB_AA55_5555__0__0__C__4__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__5__0____0000__40
FFEE_DDCC_BBAA_6666__0__0__C__5__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__6__0____0000__40
00FF_EEDD_CCBB_AA77__0__0__C__6__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__7__0____0000__40
1100_FFEE_DDCC_BBAA__0__0__C__7__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__8__0____0000__40
F1F1_F1F1_F1F1_F1F1__0__0__C__8__0____0000__40
E100_0000_0000_0000__0__0__E__0__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__9__0____0000__40
F2F2_F2F2_F2F2_F2F2__0__0__C__9__0____0000__40
E2E2_E2E2_BEEF_BEEF__0__0__E__3__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__8__0____0000__40
F313_F323_F333_F343__0__0__C__8__0____0000__40
E3D3_D3C3_B3A3_BEEF__0__0__E__5__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__8__0____0000__40
FACE_1111_1111_1111__0__0__C__8__0____0000__40
DEAF_1111_1111_1111__0__0__E__8__0____0000__40
CAFE_1111_1111_1234__0__0__E__8__0____0000__40
FACE_2222_2222_2222__0__0__E__8__0____0000__40
BEEF_2222_2222_2222__0__0__E__8__0____0000__40
CAFE_1234_1234_1234__0__0__E__8__0____0000__40
FACE_1111_1111_1234__0__0__E__8__0____0000__40
DEAF_1234_4321_1234__0__0__E__8__0____0000__40
CAFE_1234_4321_1234__0__0__E__7__0____0000__40
BEEF_BEEF_BEEF_BEEF__0__0__F__8__0____0000__40

DEAD_DEAD_DEAD_DEAD__0__0__F__8__0____0000__00   //Repeat the test vector    













